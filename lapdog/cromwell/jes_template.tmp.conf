# Minimal Cromwell template for using JES

system {
  max-concurrent-workflows = 10000
  max-workflow-launch-count = 100
  io {
    number-of-requests = 2000
    per = 100 seconds
  }
}

webservice {
  port = 8000
  interface = 0.0.0.0
  instance.name = "cromwell-for-lapdog"
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  http {
    idle-timeout = 300 s
    request-timeout = 300 s
  }
}

spray.can {
  server {
    request-timeout = 40s
  }
  client {
    request-timeout = 40s
    connecting-timeout = 40s
  }
}

backend {
  default = "JES"
  providers {
    JES {
      actor-factory = "cromwell.backend.google.pipelines.v2alpha1.PipelinesApiLifecycleActorFactory"
      config {
        project = "${project_id}"
        root = "${working_dir}"

        genomics {
          # A reference to an auth defined in the 'google' stanza at the top.  This auth is used to create
          # Pipelines and manipulate auth JSONs.
          auth = "application-default"
          endpoint-url = "https://genomics.googleapis.com/"
          compute-service-account = "SERVICEACCOUNT"
          parallel-composite-upload-threshold = 150M
        }

        filesystems = {
          gcs {
            # A reference to a potentially different auth for manipulating files via engine functions.
            auth = "application-default"
          }
        }

        default-runtime-attributes {
          noAddress: PRIVATE_ACCESS
          zones: "SUBMISSION_ZONES"
        }

      }
    }
  }
}

engine {
  filesystems {
    gcs {
      auth = "application-default"
    }
  }
}

google {
  application-name = "cromwell"
  auths = [
    {
      name = "application-default"
      scheme = "application_default"
    }
  ]
}

database {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    driver = "com.mysql.cj.jdbc.Driver"
    url = "jdbc:mysql://localhost/cromwell?rewriteBatchedStatements=true"
    user = "root"
    password = "cromwell"
    connectionTimeout = 5000
  }
}

call-caching {
  enabled = true
}

instrumentation {
  use-kamon = false
}

# Toss in default services config???

services {
  KeyValue {
    class = "cromwell.services.keyvalue.impl.SqlKeyValueServiceActor"
    config {
      # Similar to metadata service config, see cromwell.examples.conf
      # db-batch-size = 200
      # db-flush-rate = 5 seconds
    }
  }
  MetadataService {
    class = "cromwell.services.metadata.impl.MetadataServiceActor"
    config {
      # See cromwell.examples.conf for details on settings one can use here as they depend on the implementation
      # being used.
    }
  }
  Instrumentation {
    # Default noop service - instrumentation metrics are ignored
    class = "cromwell.services.instrumentation.impl.noop.NoopInstrumentationServiceActor"
  }
  LoadController {
    class = "cromwell.services.loadcontroller.impl.LoadControllerServiceActor"
    config {
      # See cromwell.examples.conf for details on settings one can use here
    }
  }
}
